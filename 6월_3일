
MySQL FUNCTION (사용자정의 함수) 

# 기본 모양

CREATE FUNCTION 'functiono name' ('parameter name', 'datatype')
  RETURNS 'datatype' (DETERMINISTIC) -- 출력될 결과의 datatype 
BEGIN 
  DECLARE 'variable name' 'datatype''
  SET
  RETURN (Query) / 'variable name';
END -- function은 begin으로 시작해서 end로 끝난다. 

-- deterministic : 입력한 파라미터가 같다면 결과값은 항상 동일하게 나온다. 

# 사용 방법 

SELECT 'function name' (parameter)

# 예시
https://www.mysqltutorial.org/mysql-stored-function/
https://www.mysqltutorial.org/mysql-if-statement/

-- 쿼리 
# 사용자정의 함수 쿼리 :
CREATE FUNCTION CumstoemrLevel (credit Decimal(10,2)) --Decimal : 실수형 
RETURNS VARCHAR(20) DETERMINISTIC
BEGIN 
		DECLARE Level VARCHAR(20);
		IF credit > 50000 THEN
				SET Level = 'PLATINUM';
		ELSEIF (credit <= 50000 AND credit >= 10000) THEN
				SET Level = 'GOLD';
		ELSEIF credit < 10000 THEN
				SET Level = 'SILVER';
		END IF;
		-- return the customer level
		RETURN (Level);
END; 

# 사용 방법 : 
SELECT customerName,
			CustomerLevel(creditLimit)
FROM customers 
ORDER BY customerName;

--------------------------------------------------------------------------------------------

# LEETCODE 177번 문제를 여러방식으로  풀어보자 
https://leetcode.com/problems/nth-highest-salary/

1) CASE WHEN 

CREATE FUNCTION getNthHighestSalary (N INT)
RETURNS INT
BEGIN 	
	RETURN (
    		SELECT CASE WHEN COUNT(sub.Salary) < N THEN NULL
            			ELSE MIN(sub.Salary)
                	END
            FROM ( SELECT DISTINCT Salary 
            		FROM Employee
                    ORDER BY Salary DESC
                    LIMIT N
                    ) sub
     ); 
END

2) IF(condition, True_value, False_value)
-- CASE보다 가독성이 좋은데 그러면 앞으로 IF문 만을 사용해야 하나?
    --> NO, 상황에 따라서 다른 문법을 선택해야 한다.
    --> 만약 조건이 여러개일때, 그리고 해당 조건들이 순차적으로 실행되어야 할 때는 IF문을 사용하기 어려움.

CREATE FUNCTION getNthHighestSalary (N INT)
RETURNS INT
BEGIN 	
	RETURN (
    		SELECT IF (COUNT(sub.Salary)< N, NULL, MIN(sub.Salary))
            FROM ( SELECT DISTINCT Salary 
            		FROM Employee
                    ORDER BY Salary DESC
                    LIMIT N
                    ) sub
     ); 
END








