# 리트코드 문제풀이

1. [550] Game Play Analysis IV

select round(count(player_id)/(select count(distinct player_id) from activity),2)  as fraction
from (select player_id
             ,event_date
             ,lead(event_date) over (partition by player_id order by event_date) as next_login
             ,row_number() over (partition by player_id order by event_date) as new_date_id
     from activity) as temp 
where new_date_id = 1 -- 처음 로그인 한 날 
and next_login is not null -- 다음에도 로그인 했음을 나타냄
and datediff(next_login,event_date) = 1  -- 다음 로그인 날짜랑 이벤트 데이트의 차이가 1

1.1. 회고 및 주저리 
 이 문제 좀 어려웠다.
 기존에 데이터리안 실전반 수업에서 들었던 형식을 기준으로 새롭게 재구성 해봤다.
 
 
 2. [534] Game Play Analysis III
 https://qingmi-53.tistory.com/221?category=1095808
 
 select player_id 
	,event_date
    ,sum(games_played) over (partition by player_id order by event_date) as games_played_so_far
from activity 
group by 1,2

2.1. 회고 및 주저리 
데이터를 보면 날짜별로 game_played 값이 누적되어 합해지는 것을 확인할 수 있다.
이에 해당 문제는 누적합을 구하는 문제로 이해할 수 있었습니다.

MySQL 구버전에서는 Window Function을 지원하지 않지만, 가장 간단하게 풀 수 있는 방법이라 생각해서 
누적합을 구할 수 있는 sum(partition by x order by y) 함수식을 이용하여 문제를 풀었습니다.

해당 문제는 player_id별로 event_date에 따른 games_played의 누적합을 구해야 했기 때문에,
sum(games_palyed) over (partition by palyer_id order by event_date)를 통해 games_palyed_so_far을 구했습니다

