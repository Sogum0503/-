1. 해당 쿼리의 문제는 무엇인가?

WITH sub_table AS (
  SELECT 
    t1.station_id AS station_id,
    t1.name AS name,
    2 * 6356 * asin(sqrt(pow(sin((radians(t1.lat) - radians(t2.lat)) / 2 ), 2) +
    cos(radians(t1.lat)) * cos(radians(t2.lat)) *
    pow(sin((radians(t1.lng) - radians(t2.lng)) / 2), 2))) AS distance
  FROM station t1
      INNER JOIN station t2 on t1.station_id = t2.station_id -- 여기 ! 
  WHERE t1.updated_at < t2.updated_at)
  
SELECT station_id
        ,name
FROM sub_table 
WHERE distance <= 0.3 
GROUP BY station_id,name
having count(*) >= 5


1.1 과정 

스터디원분이 해당 쿼리가 돌아가지 않는다며 도움을 요청하셨다.

이전까지는 t1.station_id != t2.station_id로 조건을 걸어서 self-join을 했는데
t1.station_id = t2.station_id로 하게되면 같은 한 지점이 되어서 결과값이 출력되지 못한다.

그런데 여기서 궁금증..!
t1.station_id != t2.station_id 하는것과 아예 조건을 걸지 않고 self-join해서 문제를 푸는 것과 무엇이 더 성능이 좋을까? 

1.3. 추가로 본 블로그  
https://self-interest.tistory.com/entry/ON-%EC%A1%B0%EA%B1%B4-%EC%97%86%EC%9D%B4-%EC%A1%B0%EC%9D%B8JOIN-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95


[solve_sql 문제풀이] 
2. 가구 판매의 비중이 높은 날 

SELECT order_date 
      , COUNT(DISTINCT CASE WHEN category = 'Furniture' THEN order_id END) AS 'furniture'
     -- , COUNT(DISTINCT order_id) AS "todays_order"
      , ROUND(COUNT(DISTINCT CASE WHEN category = 'Furniture' THEN order_id END)/COUNT(DISTINCT order_id) * 100,2) AS "furniture_pct"
FROM records 
GROUP BY order_date
HAVING COUNT(DISTINCT order_id) >= 10 
AND furniture_pct >= 40
AND furniture_pct >= 0.4

2.1. 회고 및 주저리 

3.작품이 없는 작가 찾기 

select a1.artist_id, a1.name
from artists a1 left join artworks_artists a2 
     on a1.artist_id = a2.artist_id
where death_year is not null 
      and artwork_id is null;
      
3.2. 회고 및 주저리 

4. 지역별 자전거 대여 현황

SELECT DISTINCT b.local AS local 
      , COUNT(a.bike_id) AS all_rent
      , COUNT(CASE WHEN b.local = c.local THEN b.station_id END) AS same_local
      , COUNT(CASE WHEN b.local != c.local THEN c.station_id END) AS diff_local
from rental_history a 
      INNER JOIN station b ON a.rent_station_id = b.station_id 
      INNER JOIN station c ON a.return_station_id  = c.station_id
WHERE a.rent_at BETWEEN '2021-01-01 00:00:00' AND '2021-01-31 23:59:59' 
AND a.return_at BETWEEN '2021-01-01 00:00:00' AND '2021-01-31 23:59:59'
GROUP by 1
ORDER BY 2 DESC;

4.1. 회고 및 주저리 

사실 아직까지 self join때 inner/left 중 뭘 써야하는지 확실한 감이 안잡혔다. 
누구한테 설명하라고 하면 어..! 이...!! 이너조인!!! 하고 끝날 것 같은 느낌. 

해당 문제같은 경우는 left / inner 동일한 성능으로 나올거라고 예상되는데
그 이유는 

우선 질문 주신 내용은 경우에 따라 다르며, 이 문제에서는 INNER JOIN 으로 SELF JOIN 을 하는 것과 LEFT JOIN 으로 SELF JOIN 을 하는 것의 결과가 동일합니다. 
여기에서는 person 이라는 테이블의 email 컬럼으로 SELF JOIN 을 하였는데요, joinkey로 사용되는 두 컬럼에 동일한 값이 들어있기 때문에
INNER JOIN 과 LEFT JOIN 의 차이가 없습니다.

결과가 달라지는 경우는, 들어있는 값이 다른 컬럼을 joinkey로 사용하여 SELF JOIN 을 한 경우입니다. 
아래 참고 문서에서 관련 예시를 보실 수 있으며, 같은 조건으로 INNER JOIN 을 했을 때와 LEFT JOIN 을 했을 때 결과에 차이가 있는 것을 확인 하실 수 있습니다.


