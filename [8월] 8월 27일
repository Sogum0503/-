[1831#_MEDIUM] Maximum Transaction Each Day

# 풀이 과정
각 날짜에 여러개 max(amount)가 있으면 모두 출력하라고 했기 때문에 dense_rank를 사용
day가 시분초 까지 지정되어 있기 때문에 date_format을 이용해서 year-month-day로 변환 작업 진행 
partition을 변환된 day로 지정하고, amount가 높은 순에 rank값을 부여한 temp 테이블 생성

temp 테이블을 활용해서 rnk가 1 값을 가지는 trancation_id를 출력 

# 쿼리 
with temp as (
select *,
        dense_rank() over(partition by date_format(day,'%y-%m-%d') order by amount desc) as rnk
from transactions)

select transaction_id
from temp
where rnk = 1 
order by 1

-----------------------------------------------------------------------------

# Write your MySQL query statement below

with home_summary as (
    select home_team_id as team_id,
            case when home_team_goals > away_team_goals then 3 
                 when home_team_goals = away_team_goals then 1 
                 when home_team_goals < away_team_goals then 0 end as points,
            home_team_goals as goal_for,
            away_team_goals as goal_against
    from Matches ),
    away_summary as (
    select away_team_id as team_id,
            case when away_team_goals > home_team_goals then 3 
                 when away_team_goals = home_team_goals then 1 
                 when away_team_goals < away_team_goals then 0 end as points,
            away_team_goals as goal_for,
            home_team_goals as goal_against 
    from Matches),
    total_summary as (
    select * from home_summary 
    union all
    select * from away_summary)
    
select t.team_name,
        count(ts.team_id) as matches_played,
        sum(ts.points) as points,
        sum(ts.goal_for) as goal_for,
        sum(ts.goal_against) as goal_against,
        sum(ts.goal_for) - sum(ts.goal_against) as goal_diff
from total_summary ts  
    join teams t on ts.team_id = t.team_id
group by 1 
order by points desc, goal_diff desc, team_name asc 
